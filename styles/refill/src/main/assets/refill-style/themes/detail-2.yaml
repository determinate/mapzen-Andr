layers:
    earth:
        continent:
            enabled: false

        island:
            enabled: false
    water:
        lakes:
            filter:
                all:
                    - kind: [ocean, lake, water, riverbank, reservoir, swimming_pool]
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: [1],  area: { min: 50000000000 } }
                    - { $zoom: [2],  area: { min: 40000000000 } }
                    # some weird natural earth scale set transition
                    - { $zoom: [3],  area: { min: 20000000000 } }
                    - { $zoom: [4],  area: { min: 8000000000 } }
                    - { $zoom: [5],  area: { min: 5000000000 } }
                    - { $zoom: [6],  area: { min: 700000000 } }
                    - { $zoom: [7],  area: { min: 500000000 } }
                    - { $zoom: [8],  area: { min: 160000000 } }
                    - { $zoom: [9],  area: { min: 40000000 } }
                    - { $zoom: [10], area: { min: 15000000 } }
                    - { $zoom: [11], area: { min: 6000000 } }
                    - { $zoom: [12], area: { min: 1000000 } }
                    - { $zoom: [13], area: { min: 500000 } }
                    - { $zoom: [14], area: { min: 100000 } }
                    - { $zoom: { min: 15 } }

        water_boundaries-not-ocean:
            enabled: false
        river:
            intermittent:
                enabled: false
        water-area-labels:
            enabled: false

    platforms:
        enabled: false

    roads:
        enabled: false

    pois:
        filter:
            - all:
                - $zoom: { min: 11 }
                - not: { kind: [grass, traffic_signals, bus_stop, tree, bench] }
                # - function() { if( $zoom >= 18 ) { return true; } else if( feature.min_zoom < 11 ) { return feature.min_zoom <= ($zoom - 1); } else { return feature.min_zoom <= ($zoom - 4); } }
                - any:
                    - all:
                        - not: { kind: [station, museum] }
                        - function() { if( $zoom >= 18 ) { return true; } else if( feature.min_zoom <= 9 ) { return feature.min_zoom <= ($zoom - 6 ); } else { return feature.min_zoom <= ($zoom - 5); } }
                    - all:
                        - kind: [station, museum]
                        - function() { if( $zoom >= 18 ) { return true; } else if( feature.min_zoom <= 10 ) { return feature.min_zoom <= ($zoom - 6 ); } else { return feature.min_zoom <= ($zoom - 5); } }
        # filter:
        #     all:
        #         - not: { kind: [military, animal, information, platform, toilets, drinking_water, bicycle_rental_station, attraction, garden, peak, dog_park, tram_stop, pitch, bus_stop, parking, traffic_signals, level_crossing, building, address, farm, tree, apron,r esidential, commercial, industrial, prison, bench] }
        #         - any:
        #             - all:
        #                 - kind: [forest, park, airport, aerodrome, protected_area]
        #                 - function() { if( $zoom >= 18 ) { return true; } else if( feature.min_zoom <= 9 ) { return feature.min_zoom <= ($zoom - 8); } else { return feature.min_zoom <= ($zoom - 5); } }
        #             - all:
        #                 - not: { kind: [forest, park, airport, aerodrome, museum, nature_reserve, university, nursing_home, mall, protected_area, sports_centre, national_park, police, marina, beach, zoo] }
        #                 - function() { if( $zoom >= 18 ) { return true; } else if( feature.min_zoom < 11 ) { return feature.min_zoom <= ($zoom - 2); } else { return feature.min_zoom <= ($zoom - 5); } }
        #             - all:
        #                 - kind: [museum, nature_reserve, university, nursing_home, mall, sports_centre, national_park, police, marina, beach, zoo]
        #                 - function() { if( $zoom >= 18 ) { return true; } else if( feature.min_zoom < 11 ) { return feature.min_zoom <= ($zoom - 5); } else { return feature.min_zoom <= ($zoom - 5); } }

        # station-train-subway:
        #     station-early:
        #         filter:
        #             $zoom: { max: 16 }      # original is max: 11

        highway-exit:
            enabled: false

        airport:
            enabled: false

        station-train-subway:
            station-early:
                filter:
                    $zoom: { max: 13 }      # original is max: 11
            low-priority-early:
                #filter: { kind_tile_rank: { min: 5 }, $zoom: { min: 0, max: 13 } }
                filter: { kind_tile_rank: { min: 4 }, $zoom: { min: 0, max: 13 } }
            low-priority-early-z13:
                #filter: { kind_tile_rank: { min: 5 }, $zoom: [13] }
                filter: { kind_tile_rank: { min: 5 }, $zoom: [13] }
            low-priority-early-z14:
                #filter: { kind_tile_rank: { min: 7 }, $zoom: [14] }
                filter: { kind_tile_rank: { min: 7 }, $zoom: [14] }
                draw:
                    mapzen_icon_library:
                        visible: false
            low-priority-early-z15:
                filter: { kind_tile_rank: { min: 7 }, $zoom: [15] }
                draw:
                    mapzen_icon_library:
                        visible: false

    buildings:
        draw:
            lines:
                width: [[14, 0.3px], [15, 0.5px], [16, 0.75px],[18, 0.75px], [19, 1px]]
        footprints:
            filter:
                any:
                    - { $zoom: [13], scale_rank: [1,2] }
                    - { $zoom: [14], scale_rank: [1,2,3] }
                    - { $zoom: [15], height: { min: 100 } }
                    - { $zoom: [15], area: { min: 500 } }
                    - { $zoom: [15], volume: { min: 100000 } }
                    - { $zoom: [16], area: { min: 100 } }
                    - { $zoom: [16], volume: { min: 50000 } }
                    - { $zoom: { min: 17 }, area: true }
            draw:
                polygons:
                    visible: true
                lines:
                    visible: true
            extrude:
                filter:
                    all:
                        - function() { return global.sdk_building_extrude; }
                        - any:
                            - { $zoom: [15], height: { min: 190 } }
                            - { $zoom: [15], area: { min: 5000 } }
                            - { $zoom: [15], volume: { min: 100000 } }
                            - { $zoom: [16], height: { min: 100 } }
                            - { $zoom: [16], area: { min: 3500 } }
                            - { $zoom: [16], volume: { min: 50000 } }
                            - { $zoom: [17], area: { min: 500 } }
                            - { $zoom: [17], volume: { min: 15000 } }
                            - { $zoom: { min: 18 } }
                        - not:
                            - layer: [-1, -2, -3, -4, -5]
                draw:
                    polygons:
                        visible: true
                        order: 438
                        style: building-grid
                        extrude: global.building_extrude_height
                        # color: global.white_color
                    lines:
                        visible: true
                        order: 439
                        style: building-lines
                        extrude: global.building_extrude_height
        building-labels:
            filter:
                all:
                    - { $zoom: { min: 18 } }
                    - $geometry: point
                    - kind: [false, building, university, college, school, kindergarten]
                    - function() { return global.text_visible_building; }
                any:
                    - { $zoom: [18], area: { min: 1000 }, name: true }
                    - { $zoom: [18], kind: [university, college, school, kindergarten] }
                    - { $zoom: [19], area: { min: 200 }, name: true }
                    - { $zoom: { min: 19 }, kind: [university, college, school, kindergarten] }
                    - { $zoom: { min: 20 }, name: true }

    places:
        enabled: false

    boundaries:
        enabled: false

    landuse:
        filter:
            all:
                - function() { return feature.min_zoom <= ($zoom - 6) }

        landuse-not-filtered:
            runway:
                enabled: false